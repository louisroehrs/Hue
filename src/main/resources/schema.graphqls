type Schema {
    Query: Query
    Mutation: Mutation
}

type Query {
    lightById(id:ID): LightDetail
    getLights: [LightDetail]
    getSensors: [SensorDetail]
    getOutlets: [Outlet]
    getVariables: [Variable]
    getChairs: [Chair]
}

type Mutation {
    turnLightOn (id:ID, on:Boolean): [LightDetail]
    setLightColor (id:ID, bri:Int, hue:Int, sat:Int): [LightDetail]
    turnOutletOn (id:ID, on:Boolean): [Outlet]
    requestChairOn (id:ID, on:Boolean): [Chair]

}

type Relay {
    name: String
    online: String
    model: String
    version: String
    outlets: [Outlet]
    sequence_delay: Int
    min_sequence_delay: Int
    cycle_delay: Int
    relatch: Int
    recovery_mode: String
    keypad_enabled: Boolean
    beep_sequence: String
    backlight_sequence: String
    lcd_columns: Int
    lcd_rows: Int
    user_lines: [String]
}

type Outlet {
    id: Int
    key: Int
    name: String
    critical : Boolean
    physical_state: Boolean
    cycle_delay: Int
    state: Boolean
    locked: Boolean
    transient_state: Boolean
}

type Chair {
    id: Int
    name: String
    requested: Boolean
    poweredOn: Boolean
}

type Variable {
    name: String
    value: Boolean
}

type Variables {
    variables: [Variable]
}

type Script {

}

type Light {
    id: ID
    lightDetail: LightDetail
}

type LightDetail {
    id: Int
    state: LightState
    swupdate: SoftwareUpdate
    type: String
    name: String
    modelid: String
    manufacturername: String
    productname: String
    capabilities: LightCapabilities
    config: LightConfig
}

type SensorDetail {
    id:Int
    name: String
    manufacturername:String
    modelid: String
    swversion:String
    type:String
    uniqueid:String
    state: SensorState
    config: SensorConfig
    recycle: Boolean
}

type SensorConfig {
    battery: Int
    on: Boolean
    reachable: Boolean
}

type SensorState {
    presence:Boolean
    buttonevent: Int
    lastUpdated: String
}

type SoftwareUpdate {
    state: String
    lastinstall: String
}

type LightState {
    on: Boolean
    bri: Int
    hue: Int
    sat: Int
    effect: String
    xy: [Int]
    ct: Int
    alert: String
    colormode: String
    mode: String
    reachable: Boolean
}

type LightCapabilities {
    certified: Boolean
}

type LightConfig {
    archetype:String
    function: String
    direction: String
    startup : LightStartup
}

type LightStartup {
    mode: String
    configured: Boolean
    customsettings: LightStartupSettings
}

type LightStartupSettings {
    bri: Int
    xy: [Int]
}
